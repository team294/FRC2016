// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team294.robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.CANTalon.FeedbackDevice;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	//Creates the onjects for everything
    public static CANTalon driveTrainLeftMotor1;
    public static CANTalon driveTrainLeftMotor2;
    public static CANTalon driveTrainRightMotor1;
    public static CANTalon driveTrainRightMotor2;
    public static RobotDrive driveTrainRobotDrive;
    public static AnalogGyro driveTrainGyro1;
    public static DoubleSolenoid shifterSolenoid;

    public static DigitalInput intakeButton;
    
    public static CANTalon shooterMotorTop;
    public static CANTalon shooterMotorBottom;
    public static DoubleSolenoid shooterPiston;
    

    public static void init() {
        // Instantiates all objects
        driveTrainLeftMotor1 = new CANTalon(5);
        LiveWindow.addActuator("DriveTrain", "leftMotor1", driveTrainLeftMotor1);
        
        driveTrainLeftMotor2 = new CANTalon(6);
        driveTrainLeftMotor2.setFeedbackDevice(CANTalon.FeedbackDevice.QuadEncoder);
        LiveWindow.addActuator("DriveTrain", "leftMotor2", driveTrainLeftMotor2);
        
        driveTrainRightMotor1 = new CANTalon(11);
        LiveWindow.addActuator("DriveTrain", "rightMotor1", driveTrainRightMotor1);
        
        driveTrainRightMotor2 = new CANTalon(12);
        driveTrainRightMotor2.setFeedbackDevice(CANTalon.FeedbackDevice.QuadEncoder);
        LiveWindow.addActuator("DriveTrain", "rightMotor2", driveTrainRightMotor2);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainLeftMotor1, driveTrainLeftMotor2,
              driveTrainRightMotor1, driveTrainRightMotor2);
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);

        driveTrainGyro1 = new AnalogGyro(0);
        LiveWindow.addSensor("DriveTrain", "gyro1", driveTrainGyro1);
        driveTrainGyro1.setSensitivity(0.007);

        shifterSolenoid = new DoubleSolenoid(1, 0);

        intakeButton = new DigitalInput(9);
        LiveWindow.addSensor("Intake", "intakeButton", intakeButton);
        
        shooterMotorTop = new CANTalon(20);
        LiveWindow.addActuator("Shooter", "shooterMotorTop", shooterMotorTop);
        shooterMotorTop.setFeedbackDevice(FeedbackDevice.CtreMagEncoder_Relative);
        shooterMotorTop.configEncoderCodesPerRev(100);
//        shooterMotorTop.reverseSensor(true);
        shooterMotorTop.configNominalOutputVoltage(+0.0f, -0.0f);
        shooterMotorTop.configPeakOutputVoltage(+12.0f, -12.0f);
        shooterMotorTop.setProfile(0);
        shooterMotorTop.setPID(0.020, 0.0002, 2.0);  // ProtoBot:  0.020, 0.0002, 2.0;  ProtoBoard:  0.005, 0.00008, 0.00001
        shooterMotorTop.setF(0.035);   // ProtoBot:  0.035;  ProtoBoard:  0.025
        shooterMotorTop.changeControlMode(TalonControlMode.Speed);
		
        shooterMotorBottom = new CANTalon(21);
        LiveWindow.addActuator("Shooter", "shooterMotorBottom", shooterMotorBottom);
        shooterMotorBottom.setFeedbackDevice(FeedbackDevice.CtreMagEncoder_Relative);
        shooterMotorBottom.configEncoderCodesPerRev(100);
//        shooterMotorBottom.reverseSensor(true);
        shooterMotorBottom.configNominalOutputVoltage(+0.0f, -0.0f);
        shooterMotorBottom.configPeakOutputVoltage(+12.0f, -12.0f);
        shooterMotorBottom.setProfile(0);
        shooterMotorTop.setPID(0.020, 0.0002, 2.0);  // ProtoBot:  0.020, 0.0002, 2.0;  ProtoBoard:  0.005, 0.00008, 0.00001
        shooterMotorTop.setF(0.035);   // ProtoBot:  0.035;  ProtoBoard:  0.025
        shooterMotorBottom.changeControlMode(TalonControlMode.Speed);
        
        shooterPiston = new DoubleSolenoid(3, 2);
        LiveWindow.addActuator("Shooter", "shooterPiston", shooterPiston);
        shooterPiston.set(DoubleSolenoid.Value.kReverse);
        
    }
}
